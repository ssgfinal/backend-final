<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ssg.com.houssg.dao.AccommodationDao">
	
	<select id="getAddressSearch" parameterType="ssg.com.houssg.dto.AccommodationParam" resultType="ssg.com.houssg.dto.AccommodationDto">
	    SELECT DISTINCT a.*
	    FROM accommodation a
	    WHERE
	    <if test="search != null and search != ''">
	        a.accom_address LIKE CONCAT('%', #{search}, '%')
	    </if>
	    <if test="type != null and type != ''">
	        AND a.accom_category = #{type}
	    </if>
	    AND EXISTS (
	        SELECT 1
	        FROM rooms r
	        WHERE r.accom_number = a.accom_number
	    )
	    AND EXISTS (
	        SELECT 1
	        FROM reservation re
	        WHERE re.accom_number = a.accom_number
	        AND re.start_date &lt;= #{startDate} AND re.end_date &gt;= #{endDate}
	    )
	</select>

	
	<!-- (5) 숙소 등록 후 selectKey에 의해, autoIncrement된 accom_number 값이 반환됨 -->
	<insert id="insertAccommodation" parameterType="ssg.com.houssg.dto.AccommodationDto">
	    INSERT INTO accommodation (accom_name, accom_address, tele_number, accom_category, accom_details, check_in, check_out, business_number, id, auth, approval_request, deletion_request, img, zip_code,add_request)
	    VALUES (#{accomName}, #{accomAddress}, #{teleNumber}, #{accomCategory}, #{accomDetails}, #{checkIn}, #{checkOut}, #{businessNumber}, #{id}, 0, 0, 0, #{img}, #{zipCode},1)
	    <selectKey keyProperty="accomNumber" resultType="int" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<select id="getMyAccom" parameterType="java.lang.String" resultType="ssg.com.houssg.dto.AccommodationDto">
		SELECT a.*,f.*
		FROM accommodation a
		JOIN facility f ON a.accom_number = f.accom_number
		JOIN user u ON a.id = u.id
		WHERE a.id=#{id}
	</select>
	
	<update id="updateAccommodation" parameterType="ssg.com.houssg.dto.AccommodationDto">
        UPDATE accommodation
        SET
            accom_name = #{accomName},
            accom_address = #{accomAddress},
            tele_number = #{teleNumber},
            accom_details = #{accomDetails},
            check_in = #{checkIn},
            check_out = #{checkOut},
            img = #{img}
        WHERE
            accom_number = #{accomNumber} and add_request = 0
    </update>

	<select id="getAccom" parameterType="int" resultType="ssg.com.houssg.dto.AccommodationDto">
		SELECT a.*, f.*
		FROM accommodation a
		JOIN facility f ON a.accom_number = f.accom_number
		WHERE a.accom_number = #{accomNumber} and a.deletion_request = 0 
	</select>
	
	<update id="updateRequest" parameterType="int">
		UPDATE accommodation
		SET approval_request = 1
		WHERE accom_number = #{accomNumber} and approval_request = 0
	</update>
	
	<update id="deleteRequest">
		UPDATE accommodation
		SET deletion_request = 1
		WHERE approval_request = 1
	</update>
	
	<select id="getAllAccom" resultType="ssg.com.houssg.dto.AccommodationDto">
	    SELECT *
	    FROM accommodation
	    WHERE deletion_request = 0 and add_request = 0
	    ORDER BY accom_number DESC
	</select>	
	
	<update id="accomApproval" parameterType="int">
		UPDATE accommodation
		SET add_request = 0
		WHERE accom_number = #{accomNumber} and add_request>0
	</update>
	
	<update id="accomApprovalX" parameterType="int">
		UPDATE accommodation
		SET add_request = 2
		WHERE accom_number = #{accomNumber} and add_request>0
	</update>
	
	<select id="getApprovalAccom" resultType="ssg.com.houssg.dto.AccommodationDto">
	    SELECT a.*,f.*
	    FROM accommodation a
	    JOIN facility f ON a.accom_number = f.accom_number
	    WHERE a.add_request = 1
	</select>
	
	<select id="accomScore" resultType="ssg.com.houssg.dto.AccommodationDto">
		SELECT a.*, AVG(r.review_rating) AS average_rating
		FROM accommodation a
		JOIN review r ON a.accom_number = r.accom_number
		GROUP BY a.accom_number
		ORDER BY average_rating DESC;	
	</select>
    
</mapper>

