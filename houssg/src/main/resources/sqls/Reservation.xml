<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ssg.com.houssg.dao.ReservationDao">

	<!-- 현재 날짜 기준 객실 별 예약현황 조회 -->
	<select id="getReservationStatus"
		resultType="ssg.com.houssg.dto.ReservationRoomDto">
		SELECT date_range.Date AS date,
		CASE
		WHEN rooms.room_number IS NOT NULL THEN MAX(rooms.room_availability) -
		COALESCE(SUM(CASE WHEN reservation.start_date &lt;= date_range.Date AND
		reservation.end_date > date_range.Date THEN 1 ELSE 0 END), 0)
		ELSE
		MAX(rooms.room_availability)
		END AS availableRooms
		FROM (
		SELECT DATE_ADD(CURDATE(), INTERVAL n DAY) AS Date
		FROM for_count
		WHERE DATE_ADD(CURDATE(), INTERVAL n DAY) &lt;= LAST_DAY(CURDATE())
		) AS date_range
		LEFT JOIN rooms ON rooms.room_number = #{roomNumber}
		LEFT JOIN reservation ON reservation.room_number = rooms.room_number AND
		reservation.status IN (0, 1)
		GROUP BY date_range.Date
		ORDER BY date_range.Date;
	</select>



	<!-- 연도 + 월 입력받아서 객실 별 예약현황 조회 -->
	<select id="getReservationStatusForYearMonth"
		resultType="ssg.com.houssg.dto.ReservationRoomDto">
		SELECT date_range.Date AS date,
		rooms.room_number AS
		roomNumber,
		MAX(rooms.room_availability) - COALESCE(SUM(CASE WHEN
		reservation.start_date &lt;= date_range.Date AND reservation.end_date
		> date_range.Date THEN
		1 ELSE 0 END), 0) AS availableRooms
		FROM (
		SELECT
		DATE_FORMAT(CONCAT(#{yearMonth}, '-01'), '%Y-%m-%d') + INTERVAL n DAY
		AS Date
		FROM for_count
		WHERE
		DATE_FORMAT(DATE_FORMAT(CONCAT(#{yearMonth}, '-01'), '%Y-%m-%d') +
		INTERVAL n DAY, '%Y-%m') = #{yearMonth}
		) AS date_range
		CROSS JOIN rooms
		LEFT JOIN reservation ON reservation.room_number = rooms.room_number
		AND reservation.start_date &lt;= date_range.Date AND
		reservation.end_date
		> date_range.Date
		AND reservation.status IN (0, 1)
		WHERE rooms.room_number = #{roomNumber}
		GROUP BY date_range.Date,
		rooms.room_number
		ORDER BY date_range.Date,
		rooms.room_number;
	</select>


	<!-- 결제 전 예약 가능 여부 라스트 체크 -->
	<select id="lastCheck"
		resultType="ssg.com.houssg.dto.ReservationRoomDto">
		SELECT date_range.Date AS date,
		rooms.room_number AS
		roomNumber,
		MAX(rooms.room_availability) - COALESCE(SUM(CASE WHEN
		reservation.start_date &lt;= date_range.Date AND reservation.end_date
		> date_range.Date THEN
		1 ELSE 0 END), 0) AS availableRooms
		FROM (
		SELECT
		DATE_ADD(#{startDate}, INTERVAL n DAY) AS Date
		FROM for_count
		WHERE
		DATE_ADD(#{startDate}, INTERVAL n DAY) BETWEEN #{startDate} AND
		DATE_SUB(#{endDate}, INTERVAL 1 DAY)
		) AS date_range
		CROSS JOIN rooms
		LEFT JOIN reservation ON reservation.room_number = rooms.room_number
		AND reservation.start_date &lt;= date_range.Date
		AND
		reservation.end_date > date_range.Date
		AND reservation.status IN (0, 1)
		WHERE rooms.room_number = #{roomNumber}
		GROUP BY date_range.Date,
		rooms.room_number
		ORDER BY date_range.Date, rooms.room_number;
	</select>


	<!-- 숙소 정보 조회 -->
	<select id="getAccommodationInfo"
		resultType="ssg.com.houssg.dto.AccommodationDto">
		SELECT accom_number, accom_name
		FROM accommodation where
		accom_number = #{accomNumber}
	</select>

	<!-- 객실 정보 조회 -->
	<select id="getRoomInfo" resultType="ssg.com.houssg.dto.RoomDto">
		SELECT room_number,
		room_category, room_price
		FROM rooms where room_number = #{roomNumber}
	</select>

	<!-- 객실 정보 조회 -->
	<select id="getAccomNumberByRoomNumber" resultType="int">
		SELECT
		accom_number
		FROM rooms where room_number = #{roomNumber}
	</select>

	<!-- 쿠폰 정보 조회 -->
	<select id="getCouponInfo"
		resultType="ssg.com.houssg.dto.UserCouponDto">
		SELECT coupon_number, coupon_name, discount
		FROM user_coupon
		where id = #{userId} AND is_used = 0
	</select>

	<!-- 보유 포인트 조회 -->
	<select id="getUserPoints" resultType="int">
		SELECT point
		FROM user
		WHERE id = #{Id}
	</select>

	<!-- 예약등록(생성) -->
	<insert id="enrollReservation"
		parameterType="ssg.com.houssg.dto.ReservationDto">
		insert into reservation(reservation_number,
		reservation_time,
		id,
		start_date,
		end_date,
		status,
		nickname,
		phone_number,
		room_category,
		room_price,
		coupon_number,
		coupon_name,
		discount,
		use_point,
		total_price,
		payment_amount,
		guest_name,
		guest_phone,
		accom_number,
		accom_name,
		room_number,review_status)
		values
		(#{reservationNumber},
		#{reservationTime}, #{id},
		#{startDate},#{endDate}, 0,
		#{nickname},#{phoneNumber},
		#{roomCategory},#{roomPrice},#{couponNumber},#{couponName},#{discount},
		#{usePoint},#{totalPrice},#{paymentAmount},#{guestName},#{guestPhone},
		#{accomNumber},#{accomName},#{roomNumber},0)
	</insert>

	<!-- 예약완료 시 쿠폰 사용 여부 변경 -->
	<update id="usedCoupon"
		parameterType="ssg.com.houssg.dto.UserCouponDto">
		UPDATE user_coupon
		SET is_used = 1
		WHERE coupon_number =
		#{couponNumber}
	</update>


	<!-- 예약완료 시 사용한 포인트 차감 -->
	<update id="usedPoint"
		parameterType="ssg.com.houssg.dto.UserDto">
		UPDATE user
		SET point = point - #{usePoint}
		WHERE id =
		#{Id}
	</update>

	<!-- 예약 상태 변경 (usedCheck) -->
	<update id="usedCheck">
		UPDATE reservation AS r
		JOIN user AS u ON r.id =
		u.id
		SET r.status = 2
		WHERE r.status = 1
		AND r.end_date = CURDATE();
	</update>

	<!-- 이용완료 시 포인트 적립 -->
	<update id="paymentRewards">
		UPDATE user AS u
		JOIN reservation AS r ON r.id = u.id
		SET u.point = u.point + (r.payment_amount * 0.05)
		WHERE r.status = 2
		AND r.end_date = CURDATE();
	</update>

	<!-- 유저 - 예약내역 조회 -->
	<select id="findRerservationById"
		resultType="ssg.com.houssg.dto.ReservationDto">
		SELECT reservation_number, reservation_time, status,
		accom_number, accom_name, room_number, room_category,
		start_date,
		end_date, room_price, coupon_name, coupon_number, discount, use_point,
		total_price, payment_amount,
		guest_name, guest_phone, review_status
		FROM reservation
		WHERE id = #{Id}
	</select>

	<!-- 사업자 id로 소유한 숙소 번호, 명 찾기 -->
	<select id="getAccommodationByOwnerId"
		resultType="ssg.com.houssg.dto.AccomListDto">
		SELECT accom_number, accom_name
		FROM accommodation
		WHERE id =
		#{id}
	</select>

	<!-- 사업자 - 숙소번호에 해당하는 예약내역 가져오기 -->
	<select id="gethistoryForOwner"
		resultType="ssg.com.houssg.dto.AccomReservationListDto">
		SELECT room_category, room_number, start_date, end_date,
		guest_name, guest_phone
		FROM reservation
		WHERE accom_number =
		#{accomNumber}
		AND DATE_FORMAT(start_date, '%Y-%m') = #{yearMonth}
		AND status = 2
	</select>

	<!-- 숙소번호에 해당하는 객실 정보 가져오기 -->
	<select id="getRoomInfoByAccommodationNumber"
		resultType="ssg.com.houssg.dto.RoomDto">
		SELECT room_number, room_category, room_availability
		FROM
		rooms
		WHERE accom_number = #{accomNumber}
	</select>

</mapper>